import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage
from config import settings
from filters import HasRoleFilter
from roles import Role
from superadmin_handlers import router as superadmin_router
from invite_handler import router as invite_router
from admin_claim import router as claim_router
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ó–∞–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ"
from aiogram import Router
from aiogram.types import CallbackQuery
from db import AsyncSessionLocal
from models import User, Faculty
from roles import Role

import gsheets
from gsheets import import_faculty_spreadsheet
from sqlalchemy import select
from models import Candidate

bot = Bot(token=settings.bot_token)
storage = MemoryStorage()
dp = Dispatcher(storage=storage)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
dp.include_router(invite_router)  # –°–Ω–∞—á–∞–ª–∞ invite_router –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ /start —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
dp.include_router(claim_router)
dp.include_router(superadmin_router)


@dp.message(Command("start"), HasRoleFilter([Role.SUPERADMIN]))
async def cmd_start_superadmin(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ /start –¥–ª—è —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìã –§–∞–∫—É–ª—å—Ç–µ—Ç—ã", callback_data="faculties_menu")],
        [InlineKeyboardButton(text="üë• –ê–¥–º–∏–Ω—ã", callback_data="admins_menu")],
        [InlineKeyboardButton(text="üìä Google —Ç–∞–±–ª–∏—Ü—ã", callback_data="sheets_menu")],
        [InlineKeyboardButton(text="‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞", callback_data="help")]
    ])
    await message.answer("üîß –ü–∞–Ω–µ–ª—å —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–∞", reply_markup=keyboard)


@dp.message(Command("start"), HasRoleFilter([Role.ADMIN]))
async def cmd_start_admin(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ /start –¥–ª—è –∞–¥–º–∏–Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞"""
    from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì• –ó–∞–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ", callback_data="import_faculty_data")]
    ])
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã –∞–¥–º–∏–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /whoami –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–æ–ª–∏.\n\n"
        "–î–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google-—Ç–∞–±–ª–∏—Ü—ã –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        reply_markup=keyboard
    )




@dp.callback_query(F.data == "import_faculty_data", HasRoleFilter([Role.ADMIN]))
async def import_faculty_data_handler(callback: CallbackQuery):
    user_id = str(callback.from_user.id)
    async with AsyncSessionLocal() as session:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∞
        result = await session.execute(select(User).where(User.tg_id == user_id))
        admin = result.scalar_one_or_none()
        if not admin or not admin.faculty_id:
            await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç.", show_alert=True)
            return
        # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–∞–±–ª–∏—Ü—É
        faculty_result = await session.execute(select(Faculty).where(Faculty.id == admin.faculty_id))
        faculty = faculty_result.scalar_one_or_none()
        if not faculty or not faculty.google_sheet_url:
            await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ Google-—Ç–∞–±–ª–∏—Ü–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞.", show_alert=True)
            return

        # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–º–ø–æ—Ä—Ç –≤ —Ñ–æ–Ω–µ, —á—Ç–æ–±—ã –Ω–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å Telegram
        await callback.answer("‚è≥ –ò–º–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω! –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏–¥—ë—Ç –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.", show_alert=True)

        async def do_import():
            added_candidates, added_users, error = await gsheets.import_faculty_spreadsheet(faculty.google_sheet_url, session)
            if error:
                await bot.send_message(callback.from_user.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ: {error}")
            else:
                await bot.send_message(callback.from_user.id, f"‚úÖ –ò–º–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –ö–∞–Ω–¥–∏–¥–∞—Ç–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω–æ: {added_candidates}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {added_users}")

        asyncio.create_task(do_import())


@dp.message(Command("start"))
async def cmd_start_default(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ /start –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.")


@dp.message(Command("whoami"), HasRoleFilter([Role.SUPERADMIN]))
async def whoami_super(message: Message):
    await message.answer("–¢—ã ‚Äî —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /help_superadmin –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")


@dp.message(Command("whoami"), HasRoleFilter([Role.ADMIN]))
async def whoami_admin(message: Message):
    await message.answer("–¢—ã ‚Äî –∞–¥–º–∏–Ω —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞")


@dp.message(Command("whoami"), HasRoleFilter([Role.EXPERIENCED]))
async def whoami_exp(message: Message):
    await message.answer("–¢—ã ‚Äî –æ–ø—ã—Ç–Ω—ã–π —Å–æ–±–µ—Å–µ—Ä")


@dp.message(Command("whoami"), HasRoleFilter([Role.NEWBIE]))
async def whoami_new(message: Message):
    await message.answer("–¢—ã ‚Äî –Ω–µ–æ–ø—ã—Ç–Ω—ã–π —Å–æ–±–µ—Å–µ—Ä")


@dp.message(Command("whoami"))
async def whoami_unknown(message: Message):
    await message.answer("–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")


async def main():
    await dp.start_polling(bot)


if __name__ == "__main__":
    asyncio.run(main())

