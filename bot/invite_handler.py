import secrets
import string
from aiogram import Router
from aiogram.types import Message
from aiogram.filters import CommandStart
from sqlalchemy import select, update
from passlib.hash import bcrypt
from db import AsyncSessionLocal
from models import AdminInvite, User, Faculty
from roles import Role

router = Router()


def generate_credentials():
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    login = f"admin_{secrets.randbelow(10000):04d}"
    password = ''.join(secrets.choice(string.ascii_letters + string.digits) for _ in range(8))
    return login, password


@router.message(CommandStart())
async def handle_start_with_invite(message: Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start —Å –∫–æ–¥–æ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"""
    if not message.text or not message.from_user:
        return
    
    # –ü–∞—Ä—Å–∏–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥—ã /start
    args = message.text.split()
    if len(args) < 2:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞.")
        return
    
    invite_code = args[1]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∞
    if not invite_code.startswith("admin_"):
        await message.answer("–ù–µ–≤–µ—Ä–Ω—ã–π –∫–æ–¥ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è!")
        return
    
    invite_code = invite_code[6:]  # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "admin_"
    
    async with AsyncSessionLocal() as session:
        # –ò—â–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ
        result = await session.execute(
            select(AdminInvite).where(
                AdminInvite.invite_code == invite_code,
                AdminInvite.is_used == False
            )
        )
        invite = result.scalar_one_or_none()
        
        if not invite:
            await message.answer("‚ùå –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —É–∂–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ!")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        user_result = await session.execute(
            select(User).where(User.tg_id == str(message.from_user.id))
        )
        existing_user = user_result.scalar_one_or_none()
        
        if existing_user:
            await message.answer("‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ!")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–µ
        faculty_result = await session.execute(
            select(Faculty).where(Faculty.id == invite.faculty_id)
        )
        faculty = faculty_result.scalar_one_or_none()
        
        if not faculty:
            await message.answer("‚ùå –§–∞–∫—É–ª—å—Ç–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è —Å–∞–π—Ç–∞
        login, password = generate_credentials()
        password_hash = bcrypt.hash(password)
        
        # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è-–∞–¥–º–∏–Ω–∞ —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞
        admin_user = User(
            username=login,
            password_hash=password_hash,
            full_name=f"{message.from_user.first_name} {message.from_user.last_name or ''}".strip(),
            tg_id=str(message.from_user.id),
            faculty_id=invite.faculty_id,
            role=Role.ADMIN.value,
            is_active=True
        )
        
        session.add(admin_user)
        
        # –û—Ç–º–µ—á–∞–µ–º –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ
        await session.execute(
            update(AdminInvite)
            .where(AdminInvite.id == invite.id)
            .values(is_used=True)
        )
        
        await session.commit()
        await session.refresh(admin_user)
        
        await message.answer(
            f"üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n\n"
            f"üìã –í—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —Ñ–∞–∫—É–ª—å—Ç–µ—Ç–∞: **{faculty.name}**\n\n"
            f"üåê –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç:\n"
            f"üë§ –õ–æ–≥–∏–Ω: `{login}`\n"
            f"üîë –ü–∞—Ä–æ–ª—å: `{password}`\n\n"
            f"üí° –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ! –û–Ω–∏ –ø–æ–Ω–∞–¥–æ–±—è—Ç—Å—è –¥–ª—è –≤—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç.",
            parse_mode="Markdown"
        )
